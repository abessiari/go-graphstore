- hosts: all
  vars_files:
  - vars.yaml

  tasks:
  - name: ansible create stage directory
    file:
      path: '{{ stage_dir }}'
      state: directory

  - name: Check if journal exists
    stat:
      path: '{{ stage_dir }}/blazegraph.jnl'
      get_checksum: False
      get_md5: False
    register: journal_result

  - name: Get remote blazegraph
    get_url:
      url: "{{ remote_journal_gzip }}"
      dest: "/{{ stage_dir }}/blazegraph.jnl.gz"
      timeout: 1000
    when: not journal_result.stat.exists

  - name: Unpack the journal
    shell: unpigz "/{{ stage_dir }}/blazegraph.jnl.gz" || gunzip "/{{ stage_dir }}/blazegraph.jnl.gz"
    when: not journal_result.stat.exists
    args:
      executable: /bin/bash

  - name: Create proxy-configs directory
    file:
      path: '{{ stage_dir }}/proxy-configs'
      state: directory 

  - name: install docker-compose, http configs, ...
    template:
      src: 'templates/{{ item.file }}'
      dest: '{{ stage_dir }}{{ item.dir }}/{{ item.file }}'
    with_items:
      - { file: 'docker-compose.yaml', dir: '/' }
      - { file: 'readonly_cors.xml', dir: '/' }
      - { file: 'httpd-vhosts-graphstore.conf', dir: '/proxy-configs' }

  - name: s3cfg is unused delete it 
    file:
      path: "{{ stage_dir }}/proxy-configs/s3cfg"
      state: absent
    when: not USE_S3 | bool

  - name: copy s3cfg is unused delete it 
    copy:
      src: "{{ S3_CRED_FILE }}"
      dest: "{{ stage_dir }}/proxy-configs/s3cfg"
    when: USE_S3 | bool

